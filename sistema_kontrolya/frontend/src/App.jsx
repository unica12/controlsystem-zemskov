import React, { useState } from "react";
import axios from "axios";
import "./App.css";

function App() {
  const [isLogin, setIsLogin] = useState(true);
  const [form, setForm] = useState({ username: "", email: "", password: "" });
  const [user, setUser] = useState(null);

  const handleChange = (e) =>
    setForm({ ...form, [e.target.name]: e.target.value });

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      if (isLogin) {
        const res = await axios.post("http://localhost:4000/api/auth/login", {
          email: form.email,
          password: form.password,
        });
        setUser(res.data.user);
        localStorage.setItem("token", res.data.token);
      } else {
        await axios.post("http://localhost:4000/api/auth/register", form);
        alert("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –¢–µ–ø–µ—Ä—å –≤–æ–π–¥–∏—Ç–µ.");
        setIsLogin(true);
      }
    } catch (err) {
      alert(err.response?.data?.message || "–û—à–∏–±–∫–∞");
    }
  };

  const handleLogout = () => {
    localStorage.removeItem("token");
    setUser(null);
  };

  // üëá –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞ ‚Äî –∫—Ä–∞—Å–∏–≤–æ –∏ –ø–æ —Ü–µ–Ω—Ç—Ä—É
  if (user) {
    return (
      <div className="wrapper">
        <div className="container dashboard">
          <h2>–°–∏—Å—Ç–µ–º–∞ –∫–æ–Ω—Ç—Ä–æ–ª—è –∫–∞—á–µ—Å—Ç–≤–∞</h2>
          <p>
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <b>{user.username}</b>!
          </p>
          <p>–í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É –∫–æ–Ω—Ç—Ä–æ–ª—è –∫–∞—á–µ—Å—Ç–≤–∞.</p>
          <div className="dashboard-content">
            <div className="card">
              <h3>–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö</h3>
              <p>–ê–Ω–∞–ª–∏–∑ –∏ –æ—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –ø–æ –∫–ª—é—á–µ–≤—ã–º –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º.</p>
            </div>
            <div className="card">
              <h3>–û—Ç—á—ë—Ç—ã</h3>
              <p>–°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–æ–∫.</p>
            </div>
            <div className="card">
              <h3>–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å</h3>
              <p>–°–≤—è–∑—å —Å –æ—Ç–¥–µ–ª–æ–º –∫–æ–Ω—Ç—Ä–æ–ª—è –∏ –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –ø–æ –ø—Ä–æ—Ü–µ—Å—Å–∞–º.</p>
            </div>
          </div>
          <button onClick={handleLogout}>–í—ã–π—Ç–∏</button>
        </div>
      </div>
    );
  }

  // üëá –°—Ç—Ä–∞–Ω–∏—Ü—ã –≤—Ö–æ–¥–∞ / —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
  return (
    <div className="wrapper">
      <div className="container">
        <h2>{isLogin ? "–í—Ö–æ–¥" : "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"}</h2>
        <form onSubmit={handleSubmit}>
          {!isLogin && (
            <input
              type="text"
              name="username"
              placeholder="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
              value={form.username}
              onChange={handleChange}
              required
            />
          )}
          <input
            type="email"
            name="email"
            placeholder="Email"
            value={form.email}
            onChange={handleChange}
            required
          />
          <input
            type="password"
            name="password"
            placeholder="–ü–∞—Ä–æ–ª—å"
            value={form.password}
            onChange={handleChange}
            required
          />
          <button type="submit">
            {isLogin ? "–í–æ–π—Ç–∏" : "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"}
          </button>
        </form>
        <div className="toggle">
          {isLogin ? (
            <>
              –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?{" "}
              <span onClick={() => setIsLogin(false)}>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</span>
            </>
          ) : (
            <>
              –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?{" "}
              <span onClick={() => setIsLogin(true)}>–í–æ–π—Ç–∏</span>
            </>
          )}
        </div>
      </div>
    </div>
  );
}

export default App;
